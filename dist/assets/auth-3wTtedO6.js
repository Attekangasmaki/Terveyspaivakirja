const c=async(n,e={})=>{try{const t=await fetch(n,e);if(!t.ok)return{error:await t.text()||"Tuntematon virhe"};try{return await t.json()}catch{return{error:"Vastaus ei ole kelvollista JSON-muotoa"}}}catch(t){return console.error("fetchData() error:",t.message),{error:t.message}}},u=async n=>{n.preventDefault();const e=document.querySelector(".registerForm"),t=e.querySelector("#username").value.trim(),s=e.querySelector("#password").value.trim(),a=e.querySelector("#email").value.trim(),l={username:t,password:s,email:a},i="http://localhost:5000/api/users",r={body:JSON.stringify(l),method:"POST",headers:{"Content-type":"application/json"}};console.log("Lähetetään pyyntö:",r);try{const o=await c(i,r);if(console.log("Palvelimen vastaus:",o),o.error){console.error("Virhe käyttäjän luomisessa:",o.error);return}if(!o.token||!o.user||!o.user.id){console.error("Virhe: Tokenia tai user_id:tä ei palautettu.");return}console.log("Rekisteröinti onnistui! Token:",o.token),localStorage.setItem("token",o.token),localStorage.setItem("user_id",o.user.id),localStorage.setItem("nimi",o.user.username),console.log("Ohjataan käyttäjä etusivulle..."),setTimeout(()=>{location.href="./userfrontpage.html"},500),e.reset()}catch(o){console.error("Rekisteröinti epäonnistui:",o)}},m=async n=>{n.preventDefault();const e=document.querySelector(".loginForm"),t=e.querySelector("input[name=username]").value,s=e.querySelector("input[name=password]").value,a={username:t,password:s},l="http://localhost:5000/api/auth/login",i={body:JSON.stringify(a),method:"POST",headers:{"Content-type":"application/json"}};console.log(i);const r=await c(l,i);if(r.error){console.error("Virhe kirjautumisessa:",r.error);return}r.token&&r.user?(console.log("Kirjautuminen onnistui! Token:",r.token),localStorage.setItem("token",r.token),localStorage.setItem("user_id",r.user.id),localStorage.setItem("nimi",r.user.username),location.href="./userfrontpage.html"):console.error("Virhe: Tokenia tai käyttäjä-ID:tä ei palautettu."),console.log(r),e.reset()},d=async n=>{n.preventDefault();const e=localStorage.getItem("token");if(!e){alert("Sinun täytyy kirjautua ensin!");return}const t="http://localhost:5000/api/auth/me",s={headers:{Authorization:`Bearer ${e}`}},a=await c(t,s);if(a.error){console.error("Virhe käyttäjää tarkistettaessa:",a.error);return}console.log(a)};document.addEventListener("DOMContentLoaded",()=>{const n=document.querySelector(".registerForm");n&&n.addEventListener("submit",u);const e=document.querySelector(".loginForm");e&&e.addEventListener("submit",m);const t=document.querySelector("#meRequest");t&&t.addEventListener("click",d)});
